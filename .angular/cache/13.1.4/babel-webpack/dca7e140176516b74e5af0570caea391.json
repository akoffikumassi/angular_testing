{"ast":null,"code":"import { tick } from '@angular/core/testing';\nexport * from './async-observable-helpers';\nexport * from './activated-route-stub';\nexport * from './jasmine-matchers';\nexport * from './router-link-directive-stub'; ///// Short utilities /////\n\n/** Wait a tick, then detect changes */\n\nexport function advance(f) {\n  tick();\n  f.detectChanges();\n} // See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\n/** Button events to pass to `DebugElement.triggerEventHandler` for RouterLink event handler */\n\nexport const ButtonClickEvents = {\n  left: {\n    button: 0\n  },\n  right: {\n    button: 2\n  }\n};\n/** Simulate element click. Defaults to mouse left-button click event. */\n\nexport function click(el, eventObj = ButtonClickEvents.left) {\n  if (el instanceof HTMLElement) {\n    el.click();\n  } else {\n    el.triggerEventHandler('click', eventObj);\n  }\n}","map":{"version":3,"sources":["/home/yadadev/work/trainings/mean/angular/angular_testing/src/testing/index.ts"],"names":["tick","advance","f","detectChanges","ButtonClickEvents","left","button","right","click","el","eventObj","HTMLElement","triggerEventHandler"],"mappings":"AAAA,SAASA,IAAT,QAAqB,uBAArB;AACA,cAAc,4BAAd;AACA,cAAc,wBAAd;AACA,cAAc,oBAAd;AACA,cAAc,8BAAd,C,CACA;;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACvBF,EAAAA,IAAI;AACJE,EAAAA,CAAC,CAACC,aAAF;AACH,C,CACD;;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GADuB;AAE7BC,EAAAA,KAAK,EAAE;AAAED,IAAAA,MAAM,EAAE;AAAV;AAFsB,CAA1B;AAIP;;AACA,OAAO,SAASE,KAAT,CAAeC,EAAf,EAAmBC,QAAQ,GAAGN,iBAAiB,CAACC,IAAhD,EAAsD;AACzD,MAAII,EAAE,YAAYE,WAAlB,EAA+B;AAC3BF,IAAAA,EAAE,CAACD,KAAH;AACH,GAFD,MAGK;AACDC,IAAAA,EAAE,CAACG,mBAAH,CAAuB,OAAvB,EAAgCF,QAAhC;AACH;AACJ","sourcesContent":["import { tick } from '@angular/core/testing';\nexport * from './async-observable-helpers';\nexport * from './activated-route-stub';\nexport * from './jasmine-matchers';\nexport * from './router-link-directive-stub';\n///// Short utilities /////\n/** Wait a tick, then detect changes */\nexport function advance(f) {\n    tick();\n    f.detectChanges();\n}\n// See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n/** Button events to pass to `DebugElement.triggerEventHandler` for RouterLink event handler */\nexport const ButtonClickEvents = {\n    left: { button: 0 },\n    right: { button: 2 }\n};\n/** Simulate element click. Defaults to mouse left-button click event. */\nexport function click(el, eventObj = ButtonClickEvents.left) {\n    if (el instanceof HTMLElement) {\n        el.click();\n    }\n    else {\n        el.triggerEventHandler('click', eventObj);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}