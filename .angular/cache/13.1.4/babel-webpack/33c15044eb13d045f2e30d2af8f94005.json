{"ast":null,"code":"import { __decorate } from \"tslib\"; // Import patch to make async `HTMLCanvasElement` methods (such as `.toBlob()`) Zone.js-aware.\n// Either import in `polyfills.ts` (if used in more than one places in the app) or in the component\n// file using `HTMLCanvasElement` (if it is only used in a single file).\n\nimport 'zone.js/plugins/zone-patch-canvas';\nimport { Component, ViewChild } from '@angular/core';\nlet CanvasComponent = class CanvasComponent {\n  constructor() {\n    this.blobSize = 0;\n  }\n\n  ngAfterViewInit() {\n    const canvas = this.sampleCanvas.nativeElement;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, 200, 200);\n    context.fillStyle = '#FF1122';\n    context.fillRect(0, 0, 200, 200);\n    canvas.toBlob(blob => {\n      var _a;\n\n      this.blobSize = (_a = blob === null || blob === void 0 ? void 0 : blob.size) !== null && _a !== void 0 ? _a : 0;\n    });\n  }\n\n};\nCanvasComponent.propDecorators = {\n  sampleCanvas: [{\n    type: ViewChild,\n    args: ['sampleCanvas']\n  }]\n};\nCanvasComponent = __decorate([Component({\n  selector: 'sample-canvas',\n  template: '<canvas #sampleCanvas width=\"200\" height=\"200\"></canvas>'\n})], CanvasComponent);\nexport { CanvasComponent };","map":{"version":3,"sources":["/home/yadadev/work/trainings/mean/angular/angular_testing/src/app/shared/canvas.component.ts"],"names":["__decorate","Component","ViewChild","CanvasComponent","constructor","blobSize","ngAfterViewInit","canvas","sampleCanvas","nativeElement","context","getContext","clearRect","fillStyle","fillRect","toBlob","blob","_a","size","propDecorators","type","args","selector","template"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CACA;AACA;AACA;;AACA,OAAO,mCAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAN,CAAsB;AACxCC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,CAAhB;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,UAAMC,MAAM,GAAG,KAAKC,YAAL,CAAkBC,aAAjC;AACA,UAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAxB,EAA6B,GAA7B;AACAF,IAAAA,OAAO,CAACG,SAAR,GAAoB,SAApB;AACAH,IAAAA,OAAO,CAACI,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB,EAA4B,GAA5B;AACAP,IAAAA,MAAM,CAACQ,MAAP,CAAcC,IAAI,IAAI;AAClB,UAAIC,EAAJ;;AACA,WAAKZ,QAAL,GAAgB,CAACY,EAAE,GAAGD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACE,IAAvD,MAAiE,IAAjE,IAAyED,EAAE,KAAK,KAAK,CAArF,GAAyFA,EAAzF,GAA8F,CAA9G;AACH,KAHD;AAIH;;AAduC,CAA5C;AAgBAd,eAAe,CAACgB,cAAhB,GAAiC;AAC7BX,EAAAA,YAAY,EAAE,CAAC;AAAEY,IAAAA,IAAI,EAAElB,SAAR;AAAmBmB,IAAAA,IAAI,EAAE,CAAC,cAAD;AAAzB,GAAD;AADe,CAAjC;AAGAlB,eAAe,GAAGH,UAAU,CAAC,CACzBC,SAAS,CAAC;AACNqB,EAAAA,QAAQ,EAAE,eADJ;AAENC,EAAAA,QAAQ,EAAE;AAFJ,CAAD,CADgB,CAAD,EAKzBpB,eALyB,CAA5B;AAMA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\n// Import patch to make async `HTMLCanvasElement` methods (such as `.toBlob()`) Zone.js-aware.\n// Either import in `polyfills.ts` (if used in more than one places in the app) or in the component\n// file using `HTMLCanvasElement` (if it is only used in a single file).\nimport 'zone.js/plugins/zone-patch-canvas';\nimport { Component, ViewChild } from '@angular/core';\nlet CanvasComponent = class CanvasComponent {\n    constructor() {\n        this.blobSize = 0;\n    }\n    ngAfterViewInit() {\n        const canvas = this.sampleCanvas.nativeElement;\n        const context = canvas.getContext('2d');\n        context.clearRect(0, 0, 200, 200);\n        context.fillStyle = '#FF1122';\n        context.fillRect(0, 0, 200, 200);\n        canvas.toBlob(blob => {\n            var _a;\n            this.blobSize = (_a = blob === null || blob === void 0 ? void 0 : blob.size) !== null && _a !== void 0 ? _a : 0;\n        });\n    }\n};\nCanvasComponent.propDecorators = {\n    sampleCanvas: [{ type: ViewChild, args: ['sampleCanvas',] }]\n};\nCanvasComponent = __decorate([\n    Component({\n        selector: 'sample-canvas',\n        template: '<canvas #sampleCanvas width=\"200\" height=\"200\"></canvas>',\n    })\n], CanvasComponent);\nexport { CanvasComponent };\n"]},"metadata":{},"sourceType":"module"}